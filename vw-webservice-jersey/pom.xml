<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

  	<parent>
     	<groupId>com.eharmony.matching</groupId>
        <artifactId>vw-webservice</artifactId>
	   	<version>0.0.1-SNAPSHOT</version>
	    <relativePath>../../vw-webservice</relativePath>
	</parent>

    <artifactId>vw-webservice-jersey</artifactId>
    <packaging>war</packaging>
    <name>VW Web Service (Jersey).</name>
    <description>Jersey based web service.</description>

    <properties>
        <jersey.version>2.5.1</jersey.version>
    </properties>

	<!-- adding this so we can properly fetch the maven-protoc-plugin -->
<!--     <pluginRepositories>
        <pluginRepository>
            <id>dtrott</id>
            <url>http://maven.davidtrott.com/repository</url>
        </pluginRepository>
    </pluginRepositories>  -->

    <build>    
    	<finalName>vw-webservice-jersey</finalName>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            
            <plugin>            
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-war-plugin</artifactId>
			  <version>2.1.1</version>
			  <configuration>
			    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>        
			  </configuration>
			</plugin>
            
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.glassfish.jersey</groupId>
                <artifactId>jersey-bom</artifactId>
                <version>${jersey.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
    
    	<dependency>
    		<groupId>com.eharmony.matching</groupId>
    		<artifactId>vw-webservice-core</artifactId>
    		<version>0.0.1-SNAPSHOT</version>
    	</dependency>

    	<dependency>
    		<groupId>com.eharmony.matching</groupId>
    		<artifactId>vw-webservice-common</artifactId>
    		<version>0.0.1-SNAPSHOT</version>
    	</dependency>

        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <!-- since we don't need servlet 2.x support (using async responses to client requires that
            we use the servlet 3.x spec), i am commenting this out. this is what the jersey documentation says to do, FYI. -->
			<!-- <artifactId>jersey-container-servlet-core</artifactId> -->
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>
<!--         uncomment this to get JSON support -->
<!--         <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-moxy</artifactId>
        </dependency> -->
       
       <!-- dependencies for testing -->
        <dependency>
        	<groupId>junit</groupId>
        	<artifactId>junit</artifactId>
        </dependency>
        
        <dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
        
      <!-- end dependencies for testing -->
        
        <!-- protocol buffers dependencies -->
<!--         <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>2.4.1</version>
        </dependency> -->
        
        
        
 		<dependency>
 			<groupId>org.apache.commons</groupId>
  			<artifactId>commons-lang3</artifactId>
 		</dependency>

 		<!-- Spring dependencies. -->
 		<dependency>
 			<groupId>org.springframework</groupId>
 			<artifactId>spring-core</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>org.springframework</groupId>
 			<artifactId>spring-beans</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>org.springframework</groupId>
 			<artifactId>spring-context</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>org.springframework</groupId>
 			<artifactId>spring-context-support</artifactId>
 		</dependency>
 		<dependency>
 			<groupId>org.springframework</groupId>
 			<artifactId>spring-expression</artifactId>
 		</dependency>
 		
 		<!-- Jersey JAX-RS needs this in order to be able to use Spring DI. -->
 		<dependency>
    		<groupId>org.glassfish.jersey.ext</groupId>
    		<artifactId>jersey-spring3</artifactId>
    		<version>${jersey.version}</version>
		</dependency>

		<!-- logback dependencies -->
		<dependency>
 			<groupId>org.slf4j</groupId>
 			<artifactId>slf4j-api</artifactId>
 		</dependency>
 		
 		<dependency>
 			<groupId>ch.qos.logback</groupId>
 			<artifactId>logback-classic</artifactId>
 		</dependency>
 		
 		<dependency>
 			<groupId>ch.qos.logback</groupId>
 			<artifactId>logback-core</artifactId>
 		</dependency>
 		
 		<!-- google guava -->
 		<dependency>
		    <groupId>com.google.guava</groupId>
		    <artifactId>guava</artifactId>
		</dependency>

		<!-- google gson for reading json examples, used in the jsonexamplesmessagebodyreader package -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<!-- jackson for json debug writer -->
		<dependency>
		  <groupId>com.fasterxml.jackson.core</groupId>
		  <artifactId>jackson-core</artifactId>
		</dependency>
 
		<!--  apache commons collections -->
 		<dependency>
 			<groupId>commons-collections</groupId>
 			<artifactId>commons-collections</artifactId>
 		</dependency>

        <!-- async http client for testing -->
        <dependency>
		  <groupId>com.ning</groupId>
		  <artifactId>async-http-client</artifactId>
		  <version>1.7.22</version>
		  <scope>test</scope>
		</dependency>   		
   		
    </dependencies>

</project>
